#!/bin/bash
# dmenu-network: A dmenu wrapper for NetworkManager
# Written by Renan Guilherme <japareaggae@gmail.com>

# Get current Wi-Fi status
status=$(nmcli -t -f WIFI nm wifi)

_toggleWiFi(){
case $status in
	enabled) nmcli nm wifi off;;
	disabled) nmcli nm wifi on;;
esac
}

_connectWiFi(){
[ $status == "disabled" ] && exit 1

# Get a list of networks around us
network=$(nmcli -t -f SSID d wifi | dmenu -p SSID)

# Remove surrounding quotes added by nmcli
network="$(echo $network | sed s/^\'//g | sed s/\'$//g)"

if [ "$network" ]; then
	if ( nmcli -t -f NAME c list | grep "$network" > /dev/null ); then
		# Network is known, activate a connection
		nmcli con up id "$network"
	else
		password=$( echo "" | dmenu -p "Password for $network" )
		# Network is not known, create and activate a connection
		if [ -z "$password" ] ; then
			nmcli d wifi connect "$network"
		else
			nmcli d wifi connect "$network" password "$password"
		fi
	fi
# If no networks are selected, leave
else exit 2
fi
}

_disconnectWiFi(){
nmcli c down id "$(nmcli -t -f NAME c status)"
}

options="connect\ndisconnect\nedit\ntoggle (c. $status)"
option=$(echo -e $options | dmenu -p Wi-Fi)

# The edit option requires nm-applet to be installed.
# TODO: When nmtui percolates to stable NM, use it instead
case $option in
	"connect")    _connectWiFi;;
	"disconnect") _disconnectWiFi;;
	"edit")       nm-connection-editor;;
	"toggle"*)    _toggleWiFi;;
esac

