#!/bin/bash
# dmenu-session -- A session menu using systemd and dmenu
# Written by Renan Guilherme <japareaggae@gmail.com>
# Released under the public domain <http://unlicense.org/UNLICENSE>

_getOut(){
	( pgrep 'i3' > /dev/null )      && i3 exit
	( pgrep 'bspwm' > /dev/null )   && bspc quit
	( pgrep 'openbox' > /dev/null ) && openbox --exit
	( pgrep 'sway' > /dev/null )    && swaymsg exit
}

_lock(){
	if ( pgrep 'xss-lock' > /dev/null ) || ( pgrep 'swayidle' > /dev/null ); then
		# xss-lock and swayidle listen to lock-session calls from logind.
		loginctl lock-session
	elif ( pgrep 'light-locker' > /dev/null ); then
		# Used mostly in Xfce/Xubuntu.
		# TODO: Check if they still use this today, or if they also have logind
		# integration
		light-locker-command -l
	else
		# i3lock is WM-agnostic enough to use as a catchall
		$HOME/.bin/i3locker
	fi
}

# Enable hibernation options on list only if there's a resume partition
grep 'resume=' /proc/cmdline && HIBERNATE_OPTIONS="hibernate\nhybrid-sleep\n"

# Enable restarting to Windows if it's present (requires bootctl)
bootctl list | grep 'auto-windows' && WINDOWS_OPTIONS="windows\n"

if [[ "$1" ]]; then
	option=$1
else
	option=$( printf "cancel\nlock\nlogout\nshutdown\nreboot\nsuspend\n${HIBERNATE_OPTIONS}${WINDOWS_OPTIONS}" | dmenu -p Session )
fi

case $option in
	lock) _lock ;;
	logout) _getOut;;
	shutdown) systemctl poweroff;;
	reboot) systemctl reboot;;
	suspend) sleep 0.3s; systemctl suspend;;
	hibernate) sleep 0.3s; systemctl hibernate;;
	hybrid-sleep) sleep 0.3s; systemctl hybrid-sleep;;
	windows) systemctl --boot-loader-entry=auto-windows reboot;;
	*) ;;
esac
