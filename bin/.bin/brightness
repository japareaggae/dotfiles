#!/bin/bash
# brightness -- A rudimentary brightness control
# Written by Renan Guilherme <japareaggae@gmail.com>
#
# NOTE: You need to have write permissions on the brightness
# file in order to use this script.
# This can be done with the following tmpfiles.d(5) rule:
#   f /sys/class/backlight/$DEVICE/brightness 0664 root users - -

DEVICE="radeon_bl0"
STEPSIZE=8
CFILE="/sys/class/backlight/${DEVICE}/brightness"
MFILE="/sys/class/backlight/${DEVICE}/max_brightness"

MAXIMUM="$(cat ${MFILE})"

check_permissions(){
	if ( touch $CFILE 2> /dev/null ); then
		return 0
	else
		echo "You don't have permission to write to $CFILE."
		return 1
	fi
}

decrease(){
	if ! check_permissions; then exit 1; fi
	NEW=$(( $(cat $CFILE) - $STEPSIZE ))
	if (( $NEW < $STEPSIZE )); then
		NEW=$STEPSIZE
	fi
	echo $NEW > $CFILE
}

increase(){
	if ! check_permissions; then exit 1; fi
	NEW=$(( $(cat $CFILE) + $STEPSIZE ))
	if (( $NEW > $MAXIMUM )); then
		NEW=$MAXIMUM
	fi
	echo $NEW > $CFILE
}

define(){
	if ! check_permissions; then exit 1; fi
	if [[ $1 ]] && (( $1 <= $MAXIMUM )) && (( $1 >= 0 )); then
		echo $1 > $CFILE
		cat $CFILE
	else
		echo "error: set requires a numeric argument between 0 and $MAXIMUM"
	fi
}

usage(){
cat << EOF
Usage: $(basename "$0") (cur | inc | dec | set (0-${MAXIMUM}))

Manages the screen brightness using the /sys interface.

The current device is $DEVICE with $MAXIMUM brightness steps.

  cur    Prints current brightness
  inc    Increase brightness by $STEPSIZE steps
  dec    Decrease brightness by $STEPSIZE steps
  set    Set brightness to any level between 0 and $MAXIMUM
EOF
}

case $1 in
	dec)
		decrease
		cat $CFILE
		;;
	inc)
		increase
		cat $CFILE
		;;
	set)
		define $2
		;;
	cur)
		cat $CFILE
		;;
	*)
		usage
		exit 1
		;;
esac
