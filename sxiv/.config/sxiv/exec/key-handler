#!/bin/bash

# Example for $XDG_CONFIG_HOME/sxiv/exec/key-handler
# Called by sxiv(1) after the external prefix key (C-x by default) is pressed.
# The next key combo is passed as its first argument. Passed via stdin are the
# images to act upon, one path per line: all marked images, if in thumbnail
# mode and at least one image has been marked, otherwise the current image.
# sxiv(1) blocks until this script terminates. It then checks which images
# have been modified and reloads them.

# The key combo argument has the following form: "[C-][M-][S-]KEY",
# where C/M/S indicate Ctrl/Meta(Alt)/Shift modifier states and KEY is the X
# keysym as listed in /usr/include/X11/keysymdef.h without the "XK_" prefix.

rotate() {
	degree="$1"
	tr '\n' '\0' | xargs -0 realpath | sort | uniq | while read file; do
		case "$(file -b -i "$file")" in
		image/jpeg*) jpegtran -rotate "$degree" -copy all -outfile "$file" "$file" ;;
		*)           mogrify  -rotate "$degree" "$file" ;;
		esac
	done
}

### Copy screenshots to ~/.screenshots (see ~/.bin/screenshot)
save_screenshot() {
	if [[ -e '/tmp/screenshot.flag' ]]; then
		while read file; do
			cp $file "$HOME/.screenshots"
		done
	else
		echo "[key-handler/save_screenshot] ERROR: File is not a screenshot, not saving"
	fi
}

kdeconnect-send() {
	DEVICE_COUNT=$(kdeconnect-cli --list-available --name-only | wc -l)
	if [[ $DEVICE_COUNT -eq 0 ]]; then
		echo "No devices found"
		exit 1
	elif [[ $DEVICE_COUNT -eq 1 ]]; then
		while read file; do
			kdeconnect-cli --share "$file" -n "$(kdeconnect-cli --list-available --name-only)"
		done
	else
		DEVICE=$(kdeconnect-cli --list-available --name-only | dmenu)
		while read file; do
			[[ "$DEVICE" ]] && kdeconnect-cli --share "$file" -n "$DEVICE"
		done
	fi
}

copy-path() {
	if [[ $WAYLAND_DISPLAY ]]; then
		wl-copy
	else
		xclip -in -filter | tr '\n' ' ' | xclip -in -selection clipboard
	fi
}

copy-file() {
	if [[ $WAYLAND_DISPLAY ]]; then
		while read file; do wl-copy < "$file"; done
	else
		while read file; do xclip -selection clipboard -target image/png "$file"; done
	fi
}

case "$1" in
"y")        copy-path ;;
"C-c")      copy-file ;;
"C-g")      tr '\n' '\0' | xargs -0 gimp & ;;
"C-comma")  rotate 270 ;;
"C-period") rotate  90 ;;
"C-slash")  rotate 180 ;;
"i")        while read file; do alacritty -e sh -c "exiftool '$file' | less" & done ;;
"k")        kdeconnect-send ;;
"s")        save_screenshot ;;
esac

